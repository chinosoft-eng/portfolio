---
import Layout from "../../layouts/Layout.astro";
import { projects } from "../../catalogs/projects";
import Tab from "../../components/ui/Tab.astro";
import ProjectsSidePanel from "../../components/projects/project_details/ProjectsSidePanel.astro";
import ImageSlider from "../../components/ImageSlider.astro";
import { Technologies, TECHNOLOGIES_ICON_MAPS, TECHNOLOGIES_NAME_MAPS } from "../../models/Technologies";
import BrowserIcon from "../../components/ui/icons/BrowserIcon.astro";
import DoneIcon from "../../components/ui/icons/DoneIcon.astro";
import GithubIcon from "../../components/ui/icons/GithubIcon.astro";

export function getStaticPaths() {
    return projects.map((project) => ({
        params: { project: project.number },
    }));
}

const { project } = Astro.params;

const projectData = projects.find(
    (p) => p.number.toString() === project.toString(),
)!;

const Icon = projectData.icon;
const Description = projectData.fullDescription;

// Constast color for fill of the icons
const TECHNOLOGIES_ICON_CLASS_MAPS: Record<Technologies, string> = {
    [Technologies.react]: "fill-[#61dafb]",
    [Technologies.javascript]: "fill-[#F0DB4F]",
    [Technologies.typescript]: "fill-[#007acc]",
    [Technologies.express]: "fill-white",
    [Technologies.nodejs]: "fill-[#3e863d]",
    [Technologies.electron]: "fill-[#a2eaf9]",
    [Technologies.django]: "fill-green-800",
    [Technologies.flask]: "fill-white",
    [Technologies.python]: "fill-[#F0B100]",
    [Technologies.cSharp]: "fill-white",
    [Technologies.mongodb]: "",
    [Technologies.postgresql]: "",
    [Technologies.docker]: ""
}

---

<Layout>
    <div class="w-full h-full flex bg-background overflow-y-auto">
        <div class="w-full h-full flex-1 flex">
            <ProjectsSidePanel activeProject={parseInt(project.toString())} />
            <Tab sectionName={projectData?.idenfiticator!}>
                <div class="flex flex-1 h-full w-full flex-col lg:flex-row">
                    <div
                        class="h-full w-full lg:w-2/3 rounded-lg p-8 flex flex-col gap-4 overflow-y-auto"
                    >
                        <h2
                            class="text-3xl font-bold text-heading-foreground flex gap-4 text-center"
                        >
                            <Icon className="w-10" />
                            {projectData.name}
                        </h2>
                        <div class="w-full">
                            <ImageSlider images={projectData.screenShots} />
                        </div>
                        <div id="project-description" class="text-foreground ">
                            <Description />
                        </div>
                      
                    </div>
                    <div class="w-full lg:w-1/3 my-8 px-4 md:px-6 h-fit min-w-0">
                        <div class="w-full bg-slate-800 rounded-lg p-4 min-w-0 flex flex-col ">
                            <p class="text-foreground text-lg">//{projectData.idenfiticator}</p>
                            <hr class="my-2 border border-stroke" />
                            <div class="m-2">
                                <p>Technolgoies: </p>
                                <div class="flex flex-col gap-4 bg-slate-950 rounded-lg p-4 my-1">                            
                                    {
                                        projectData.fullTechnologies.map(technology => {
                                            const Icon = TECHNOLOGIES_ICON_MAPS[technology];

                                            return (
                                                <div class="flex gap-8 items-center">
                                                    <Icon className={`w-8 ${TECHNOLOGIES_ICON_CLASS_MAPS[technology]}`}/> 
                                                    <span class="text-foreground">{TECHNOLOGIES_NAME_MAPS[technology]}</span>
                                                </div>
                                            )
                                        })
                                    }
                                </div>
                            </div>
                            <div class="m-2">
                                {
                                    projectData.usedOnProduction 
                                    && (
                                        <div class="flex gap-4 items-center p-2 rounded border border-green-900">
                                            <DoneIcon className="w-6 fill-green-800" />
                                            <p class="text-green-800">Used on production</p>
                                        </div>
                                    )
                                }
                            </div>
                            <div class="m-2">
                                <p>Links: </p>
                                <div class=" my-1">
                                    <a 
                                        href={projectData.linkToProject} 
                                        target="_blank" rel="noopener noreferrer"
                                        class="flex items-center gap-2 text-heading-foreground p-2 rounded border cursor-pointer hover:border-primary hover:text-primary"
                                    >
                                        <BrowserIcon className="w-6" /> 
                                        Go to live project 
                                    </a>
                                </div>
                            </div>
                             <div class="m-2">
                            <p>Repos: </p>
                                <div class="flex flex-col gap-2 my-1">
                                    {
                                        projectData.linkToRepos?.map(repoInfo => (
                                            <a 
                                                href={repoInfo.link} 
                                                target="_blank" rel="noopener noreferrer"
                                                class="flex items-center gap-2 text-heading-foreground p-2 rounded border border-slate-950 cursor-pointer hover:border-slate-950 hover:bg-slate-900 bg-slate-950"
                                            >
                                                <GithubIcon className="w-6 fill-white" /> 
                                                {repoInfo.title} 
                                            </a>
                                        ))
                                    }
                                    {
                                        !projectData.linkToRepos && (
                                            <div 
                                                class="flex items-center gap-2 text-foreground p-2 rounded border border-stroke bg-stroke "
                                            >
                                                <GithubIcon className="w-6 fill-foreground" /> 
                                                No public repositories available 
                                            </div> 
                                        )
                                    }
                                </div>
                            </div>
                        </div> 
                    </div>
                </div>
                
            </Tab>
        </div>
    </div>
</Layout>

<style is:global>
    #project-description > h2 {
        font-weight: 800;
        margin-bottom: 0.5rem;
    }

    #project-description p, #project-description li {
        font-size: var(--text-base);
    }

    #project-description ul {
        margin-left: 1rem;
    }

    #project-description li {
        list-style: inside;
    }

    #project-description > hr {
        margin: 1rem 0;
    }
</style>